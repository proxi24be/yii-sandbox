<?php

require_once dirname(__FILE__) . '/../../../components/CutOffValue.php';

/**
 * Test class for CutOffValue.
 * Generated by PHPUnit on 2012-10-15 at 15:27:56.
 */
class CutOffValueTest extends PHPUnit_Framework_TestCase {

    /**
     * @var CutOffValue
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new CutOffValue;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    public function testRemoveBlank() 
    {
        $this->object->setValue(" 0.055 ");
        $value=$this->object->getValue();
        $this->assertEquals($value,"0.055");
        $this->assertNotEquals($value," 0.055 ");
        $this->object->setValue("0, 045");
        $this->assertEquals($this->object->getValue(),"0.045");
    }
    
    /**
     * * @todo Implement testValidPattern().
     */
    public function testValidPattern()
    {
        $this->object->setValue("0.055");
        $validPattern=$this->object->isValidPattern();
        $this->assertEquals(true,$validPattern);
        
        $this->object->setValue(">=");
        $validPattern=$this->object->isValidPattern();
        $this->assertFalse($validPattern);
        
        $this->object->setValue(">=45");
        $validPattern=$this->object->isValidPattern();
        $this->assertTrue($validPattern);
        
        $this->object->setValue("<45");
        $validPattern=$this->object->isValidPattern();
        $this->assertTrue($validPattern);
        
        $this->object->setValue("=45");
        $validPattern=$this->object->isValidPattern();
        $this->assertFalse($validPattern);
        
        $this->object->setValue("45");
        $validPattern=$this->object->isValidPattern();
        $this->assertTrue($validPattern);
        
        $this->object->setValue("45.06");
        $validPattern=$this->object->isValidPattern();
        $this->assertTrue($validPattern);
        
        $this->object->setValue(".045");
        $validPattern=$this->object->isValidPattern();
        $this->assertFalse($validPattern);
        
        $this->object->setValue("045.");
        $validPattern=$this->object->isValidPattern();
        $this->assertTrue($validPattern);
        
        $this->object->setValue("><45");
        $validPattern=$this->object->isValidPattern();
        $this->assertFalse($validPattern);
    }
    
    public function testConvertCutoffValue()
    {
        $this->object->setValue("0.055");
        $converted=$this->object->convertCutOffValue();
        $this->assertEquals(0.055,$converted);
        echo "$converted\n";
        
        $this->object->setValue("=0.1");
        $converted=$this->object->convertCutOffValue();
        $this->assertEquals(0.1,$converted);
        echo "$converted\n";
        
        $this->object->setValue(">=0.1");
        $converted=$this->object->convertCutOffValue();
        $this->assertEquals(0.1,$converted);
        echo "$converted\n";
        
        $this->object->setValue("<=0.1");
        $converted=$this->object->convertCutOffValue();
        $this->assertEquals(0.1,$converted);
        echo "$converted\n";
        
        $this->object->setValue(">0.1");
        $converted=$this->object->convertCutOffValue();
        $this->assertEquals(0.11,$converted);
        echo "$converted\n";
        
        $this->object->setValue("<0.1");
        $converted=$this->object->convertCutOffValue();
        $this->assertEquals(0.09,$converted);
        echo "$converted\n";
    }

}

?>
